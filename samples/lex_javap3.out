Type: KEYWORD                Value: package
Type: IDENTIFIER             Value: test
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: Lexer
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: Token
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: TokenType
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: org
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: junit
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: jupiter
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: api
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: Test
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: utilities
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: DummyReader
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: class
Type: IDENTIFIER             Value: LexerOperatorTokenTest
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: @Test
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: readLessThanOperatorToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: DummyReader
Type: IDENTIFIER             Value: dummyReader
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: DummyReader
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "a<b"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Lexer
Type: IDENTIFIER             Value: lexer
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: Lexer
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: dummyReader
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Token
Type: IDENTIFIER             Value: token
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenType
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: TokenType
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: OPERATOR
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: IDENTIFIER             Value: @Test
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: readLessOrEqThanOperatorToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: DummyReader
Type: IDENTIFIER             Value: dummyReader
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: DummyReader
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "a<=b"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Lexer
Type: IDENTIFIER             Value: lexer
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: Lexer
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: dummyReader
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Token
Type: IDENTIFIER             Value: token
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenType
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: TokenType
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: OPERATOR
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenValue
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: STRING LITERAL         Value: "<="
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: IDENTIFIER             Value: @Test
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: readPlusOperatorToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: DummyReader
Type: IDENTIFIER             Value: dummyReader
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: DummyReader
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "+"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Lexer
Type: IDENTIFIER             Value: lexer
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: Lexer
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: dummyReader
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Token
Type: IDENTIFIER             Value: token
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenType
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: TokenType
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: OPERATOR
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: IDENTIFIER             Value: @Test
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: readPlusPlusOperatorToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: DummyReader
Type: IDENTIFIER             Value: dummyReader
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: DummyReader
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "a++"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Lexer
Type: IDENTIFIER             Value: lexer
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: Lexer
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: dummyReader
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Token
Type: IDENTIFIER             Value: token
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenType
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: TokenType
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: OPERATOR
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenValue
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: STRING LITERAL         Value: "++"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: IDENTIFIER             Value: @Test
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: readDivideOperatorToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: DummyReader
Type: IDENTIFIER             Value: dummyReader
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: DummyReader
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "10/5;"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Lexer
Type: IDENTIFIER             Value: lexer
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: Lexer
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: dummyReader
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Token
Type: IDENTIFIER             Value: token
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: lexer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: getToken
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenType
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: TokenType
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: OPERATOR
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: TestUtils
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: validateTokenPosition
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: token
Type: SEPARATOR              Value: ,
Type: INTEGER LITERAL        Value: 2
Type: SEPARATOR              Value: ,
Type: INTEGER LITERAL        Value: 0
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: BRACKET                Value: }
