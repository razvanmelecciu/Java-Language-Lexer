Lexical atoms list
File analysed: samples/javap3.java
Time: Mon Apr 30 22:19:24 2018

Type: KEYWORD                Value: package
Type: IDENTIFIER             Value: primes
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: java
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: util
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: LinkedList
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: java
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: util
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: List
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: java
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: util
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: concurrent
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: ExecutorService
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: import
Type: IDENTIFIER             Value: java
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: util
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: concurrent
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: Executors
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: class
Type: IDENTIFIER             Value: Printer
Type: BRACKET                Value: {
Type: KEYWORD                Value: private
Type: KEYWORD                Value: static
Type: KEYWORD                Value: final
Type: IDENTIFIER             Value: List
Type: OPERATOR               Value: <
Type: PREDEFINED TYPE        Value: String
Type: OPERATOR               Value: >
Type: IDENTIFIER             Value: listNumbers
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: LinkedList
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: static
Type: KEYWORD                Value: synchronized
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: AddResult
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: nbToAdd
Type: SEPARATOR              Value: ,
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: threadID
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: listNumbers
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: add
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: nbToAdd
Type: OPERATOR               Value: +
Type: STRING LITERAL         Value: " <"
Type: OPERATOR               Value: +
Type: IDENTIFIER             Value: threadID
Type: OPERATOR               Value: +
Type: STRING LITERAL         Value: ">"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: KEYWORD                Value: static
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: PrintAll
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: KEYWORD                Value: final
Type: PREDEFINED TYPE        Value: String
Type: IDENTIFIER             Value: i
Type: SEPARATOR              Value: :
Type: IDENTIFIER             Value: listNumbers
Type: BRACKET                Value: )
Type: IDENTIFIER             Value: System
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: out
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: println
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: i
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: BRACKET                Value: }
Type: KEYWORD                Value: public
Type: KEYWORD                Value: class
Type: IDENTIFIER             Value: PrimeThread
Type: KEYWORD                Value: implements
Type: IDENTIFIER             Value: Runnable
Type: BRACKET                Value: {
Type: KEYWORD                Value: private
Type: KEYWORD                Value: final
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: testPrime
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: private
Type: KEYWORD                Value: final
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: threadID
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: private
Type: PREDEFINED TYPE        Value: boolean
Type: IDENTIFIER             Value: isNbPrime
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: public
Type: IDENTIFIER             Value: PrimeThread
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: testPrime
Type: SEPARATOR              Value: ,
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: threadID
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: KEYWORD                Value: this
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: testPrime
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: testPrime
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: isNbPrime
Type: OPERATOR               Value: =
Type: BOOLEAN LITERAL        Value: false
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: this
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: threadID
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: threadID
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: IDENTIFIER             Value: @Override
Type: KEYWORD                Value: public
Type: PREDEFINED TYPE        Value: void
Type: IDENTIFIER             Value: run
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: isNbPrime
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: isPrime
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: testPrime
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: if
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: isNbPrime
Type: BRACKET                Value: )
Type: IDENTIFIER             Value: Printer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: AddResult
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: testPrime
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: threadID
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: KEYWORD                Value: protected
Type: PREDEFINED TYPE        Value: boolean
Type: IDENTIFIER             Value: isPrime
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: crtNumber
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: KEYWORD                Value: if
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: crtNumber
Type: OPERATOR               Value: <
Type: INTEGER LITERAL        Value: 4
Type: BRACKET                Value: )
Type: KEYWORD                Value: return
Type: BOOLEAN LITERAL        Value: true
Type: SEPARATOR              Value: ;
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: nLimit
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: crtNumber
Type: IDENTIFIER             Value: /
Type: INTEGER LITERAL        Value: 2
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 2
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: <=
Type: IDENTIFIER             Value: nLimit
Type: SEPARATOR              Value: ;
Type: OPERATOR               Value: ++
Type: IDENTIFIER             Value: i
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: KEYWORD                Value: if
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: crtNumber
Type: OPERATOR               Value: %
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: ==
Type: INTEGER LITERAL        Value: 0
Type: BRACKET                Value: )
Type: KEYWORD                Value: return
Type: BOOLEAN LITERAL        Value: false
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: KEYWORD                Value: return
Type: BOOLEAN LITERAL        Value: true
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: BRACKET                Value: }
Type: KEYWORD                Value: public
Type: KEYWORD                Value: class
Type: IDENTIFIER             Value: PrimeSeq
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: @SuppressWarnings
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "empty-statement"
Type: BRACKET                Value: )
Type: KEYWORD                Value: public
Type: KEYWORD                Value: static
Type: PREDEFINED TYPE        Value: void
Type: KEYWORD                Value: main
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: String
Type: BRACKET                Value: [
Type: BRACKET                Value: ]
Type: IDENTIFIER             Value: args
Type: BRACKET                Value: )
Type: KEYWORD                Value: throws
Type: IDENTIFIER             Value: InterruptedException
Type: BRACKET                Value: {
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: nbThreads
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 4
Type: SEPARATOR              Value: ;
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: option
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 2
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: switch
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: option
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: KEYWORD                Value: case
Type: INTEGER LITERAL        Value: 1
Type: SEPARATOR              Value: :
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: System
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: out
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: println
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "Running a number of "
Type: OPERATOR               Value: +
Type: IDENTIFIER             Value: nbThreads
Type: OPERATOR               Value: +
Type: STRING LITERAL         Value: " manually managed threads"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Thread
Type: BRACKET                Value: [
Type: BRACKET                Value: ]
Type: IDENTIFIER             Value: thList
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: Thread
Type: BRACKET                Value: [
Type: IDENTIFIER             Value: nbThreads
Type: BRACKET                Value: ]
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 1
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: <
Type: INTEGER LITERAL        Value: 1000000
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: +=
Type: IDENTIFIER             Value: nbThreads
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: j
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 0
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: j
Type: OPERATOR               Value: <
Type: IDENTIFIER             Value: nbThreads
Type: SEPARATOR              Value: ;
Type: OPERATOR               Value: ++
Type: IDENTIFIER             Value: j
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: thList
Type: BRACKET                Value: [
Type: IDENTIFIER             Value: j
Type: BRACKET                Value: ]
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: Thread
Type: BRACKET                Value: (
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: PrimeThread
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: +
Type: IDENTIFIER             Value: j
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: j
Type: BRACKET                Value: )
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: thList
Type: BRACKET                Value: [
Type: IDENTIFIER             Value: j
Type: BRACKET                Value: ]
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: start
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: Thread
Type: IDENTIFIER             Value: th
Type: SEPARATOR              Value: :
Type: IDENTIFIER             Value: thList
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: th
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: join
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: BRACKET                Value: }
Type: BRACKET                Value: }
Type: KEYWORD                Value: break
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: case
Type: INTEGER LITERAL        Value: 2
Type: SEPARATOR              Value: :
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: System
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: out
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: println
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "Running a cached pool of "
Type: OPERATOR               Value: +
Type: IDENTIFIER             Value: nbThreads
Type: OPERATOR               Value: +
Type: STRING LITERAL         Value: " threads"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: ExecutorService
Type: IDENTIFIER             Value: threadPool
Type: OPERATOR               Value: =
Type: IDENTIFIER             Value: Executors
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: newFixedThreadPool
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: nbThreads
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 1
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: <
Type: INTEGER LITERAL        Value: 1000000
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: +=
Type: IDENTIFIER             Value: nbThreads
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: j
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 0
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: j
Type: OPERATOR               Value: <
Type: IDENTIFIER             Value: nbThreads
Type: SEPARATOR              Value: ;
Type: OPERATOR               Value: ++
Type: IDENTIFIER             Value: j
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: threadPool
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: submit
Type: BRACKET                Value: (
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: PrimeThread
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: +
Type: IDENTIFIER             Value: j
Type: SEPARATOR              Value: ,
Type: IDENTIFIER             Value: j
Type: BRACKET                Value: )
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: BRACKET                Value: }
Type: IDENTIFIER             Value: threadPool
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: shutdown
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: while
Type: BRACKET                Value: (
Type: OPERATOR               Value: !
Type: IDENTIFIER             Value: threadPool
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: isTerminated
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: BRACKET                Value: }
Type: BRACKET                Value: }
Type: KEYWORD                Value: break
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: default
Type: SEPARATOR              Value: :
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: System
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: out
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: println
Type: BRACKET                Value: (
Type: STRING LITERAL         Value: "Running on a single thread"
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: PrimeThread
Type: IDENTIFIER             Value: Obj
Type: SEPARATOR              Value: ;
Type: KEYWORD                Value: for
Type: BRACKET                Value: (
Type: PREDEFINED TYPE        Value: int
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: =
Type: INTEGER LITERAL        Value: 1
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: i
Type: OPERATOR               Value: <
Type: INTEGER LITERAL        Value: 1000000
Type: SEPARATOR              Value: ;
Type: OPERATOR               Value: ++
Type: IDENTIFIER             Value: i
Type: BRACKET                Value: )
Type: BRACKET                Value: {
Type: IDENTIFIER             Value: Obj
Type: OPERATOR               Value: =
Type: KEYWORD                Value: new
Type: IDENTIFIER             Value: PrimeThread
Type: BRACKET                Value: (
Type: IDENTIFIER             Value: i
Type: SEPARATOR              Value: ,
Type: INTEGER LITERAL        Value: 0
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: IDENTIFIER             Value: Obj
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: run
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: BRACKET                Value: }
Type: KEYWORD                Value: break
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: IDENTIFIER             Value: Printer
Type: SEPARATOR              Value: .
Type: IDENTIFIER             Value: PrintAll
Type: BRACKET                Value: (
Type: BRACKET                Value: )
Type: SEPARATOR              Value: ;
Type: BRACKET                Value: }
Type: BRACKET                Value: }
